ส่วนที่ 1 int

1.1 int บน ESP32 ใช้กี่ไบต์?
คำตอบ 4 ไบต์ (32 บิต)

1.2 จากผลลัพธ์ นักศึกษาสังเกตเห็นอะไรเมื่อค่าเกินขอบเขตของ int บน ESP32?
คำตอบ ค่าจะวนกลับ (overflow/underflow) ทำให้ได้ค่าผิดจากที่คาด เช่น เกินค่าสูงสุดจะกลายเป็นค่าลบ และต่ำกว่าค่าต่ำสุดจะกลายเป็นค่าบวก

ส่วนที่ 2 float และ double

float และ double บน ESP32 ใช้กี่ไบต์ตามลำดับ?
คำตอบ float = 4 ไบต์, double = 8 ไบต์

นักศึกษาสังเกตเห็นความแตกต่างของความแม่นยำระหว่าง float และ double อย่างไร? สถานการณ์ใดที่คุณควรเลือกใช้ double แทน float?
คำตอบ float แม่นยำได้ประมาณ 6–7 หลัก double แม่นยำได้ถึง 15–16 หลักควรเลือกใช้ double เมื่อการคำนวณต้องการความละเอียดสูง เช่น การเงิน

ส่วนที่ 3 char

char ใช้กี่ไบต์? ค่าตัวเลข (ASCII value) มีความสัมพันธ์กับอักขระอย่างไร?
คำตอบ char ใช้ 1 ไบต์ → แต่ละตัวอักษรมีตัวเลข ASCII กำกับ เช่น ‘Z’ = 90, ‘z’ = 122

ส่วนที่ 4 bool

bool ใช้กี่ไบต์? true และ false ถูกแสดงผลเป็นค่าใดบน Serial Monitor?
คำตอบ bool ใช้ 1 ไบต์ → true แสดงเป็น 1, false แสดงเป็น 0

ส่วนที่ 5 long, long long, unsigned

ชนิดข้อมูลจำนวนเต็มแต่ละชนิด (long, long long, unsigned int, unsigned long, unsigned long long) ใช้กี่ไบต์บน ESP32?
คำตอบ
long = 4 ไบต์
long long = 8 ไบต์
unsigned int = 4 ไบต์
unsigned long = 4 ไบต์
unsigned long long = 8 ไบต์

บน ESP32, long มีขอบเขตเท่ากับ int หรือไม่? ชนิดข้อมูลใดที่คุณจะใช้หากต้องการเก็บค่าจำนวนเต็มบวกที่ใหญ่ที่สุด?
คำตอบ long มีขอบเขตเท่ากับ int (ทั้งคู่ 32 บิต) → ถ้าต้องการเก็บค่าจำนวนเต็มบวกที่ใหญ่ที่สุดควรใช้ unsigned long long (64-bit)

ส่วนที่ 6 byte

byte ใช้กี่ไบต์? เมื่อ myByte ถูกกำหนดให้เป็น 256 ผลลัพธ์ที่ได้คืออะไร และเพราะเหตุใด?
คำตอบ byte ใช้ 1 ไบต์ (0–255) → ถ้ากำหนดค่า 256 จะเกิดoverflow ทำให้ค่ากลับไปเป็น 0

ส่วนที่ 7 การคำนวณด้วยชนิดข้อมูลต่างกัน (Type Promotion)

ทำไม 10 / 3.0 (เมื่อตัวหารเป็น float หรือ double) ถึงได้ผลลัพธ์เป็นทศนิยม แต่เมื่อตัวหารถูกแปลงเป็น int แล้วผลลัพธ์เป็นจำนวนเต็ม?
คำตอบ
1)เมื่อหารกับ float หรือ double → int จะถูกแปลง (promotion) ไปเป็น float/double → ผลลัพธ์เป็นทศนิยม
2)เมื่อแปลงตัวหารเป็น int → กลายเป็นการหารจำนวนเต็ม → ทศนิยมถูกตัดทิ้ง

ส่วนที่ 8 การแปลงชนิดข้อมูล (Explicit Type Casting)

นักศึกษาจะใช้การทำ Type Casting ในสถานการณ์ใดบ้างในการเขียนโปรแกรม?
คำตอบ
1)เมื่อต้องการควบคุมชนิดผลลัพธ์จากการคำนวณ 
2)เมื่อต้องการตัดเศษทศนิยมออก 
3)เมื่อต้องการใช้ค่า ASCII ของอักขระ 
4)เมื่อต้องแปลงชนิดข้อมูลให้ตรงกับการทำงานของฟังก์ชันหรือไลบรารี
